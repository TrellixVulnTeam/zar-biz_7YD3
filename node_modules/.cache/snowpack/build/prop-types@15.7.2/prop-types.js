import ReactIs from 'react-is';
import { f as factoryWithTypeCheckers } from './common/factoryWithTypeCheckers-c14720ae.js';
import 'object-assign';

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var propTypes = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

{
  var ReactIs$1 = ReactIs;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = factoryWithTypeCheckers(ReactIs$1.isElement, throwOnDirectAccess);
}
});

var PropTypes = propTypes.PropTypes;
var any = propTypes.any;
var array = propTypes.array;
var arrayOf = propTypes.arrayOf;
var bool = propTypes.bool;
var checkPropTypes = propTypes.checkPropTypes;
export default propTypes;
var element = propTypes.element;
var elementType = propTypes.elementType;
var exact = propTypes.exact;
var func = propTypes.func;
var instanceOf = propTypes.instanceOf;
var node = propTypes.node;
var number = propTypes.number;
var object = propTypes.object;
var objectOf = propTypes.objectOf;
var oneOf = propTypes.oneOf;
var oneOfType = propTypes.oneOfType;
var resetWarningCache = propTypes.resetWarningCache;
var shape = propTypes.shape;
var string = propTypes.string;
var symbol = propTypes.symbol;
export { PropTypes, propTypes as __moduleExports, any, array, arrayOf, bool, checkPropTypes, element, elementType, exact, func, instanceOf, node, number, object, objectOf, oneOf, oneOfType, resetWarningCache, shape, string, symbol };
